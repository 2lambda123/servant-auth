name: CI

on:
  # Trigger the workflow on every pull request...
  pull_request:
  # ...and when the main branch is updated.
  push:
    # TODO: Revert this before merging.
    branches: ['master', 'ci']
  # Build _at least_ once per month to actively check for regressions.
  schedule:
    - cron: '0 0 1 * *'

jobs:
  # cabal:
  #   name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macOS-latest]
  #       ghc:
  #         - '8.2'
  #         - '8.4'
  #         - '8.6'
  #         - '8.8'
  #         - '8.10'
  #       exclude:
  #         - os: macOS-latest
  #           ghc: 8.8.3
  #         - os: macOS-latest
  #           ghc: 8.6.5

  #   steps:
  #   - uses: actions/checkout@v2
  #     if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

  #   - uses: haskell/actions/setup@v1
  #     id: setup-haskell-cabal
  #     name: Setup Haskell
  #     with:
  #       ghc-version: ${{ matrix.ghc }}

  #   - name: Freeze
  #     run: |
  #       cabal freeze

  #   - uses: actions/cache@v1
  #     name: Cache ~/.cabal/store
  #     with:
  #       path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
  #       key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

  #   - name: Build
  #     run: |
  #       cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
  #       cabal build all

  #   - name: Test
  #     run: |
  #       cabal test all

  #   - name: Haddock
  #     run: |
  #       cabal haddock all

  stack:
    name: stack ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest']
        name: ['nightly', 'lts16']
        include:
          # Check that the build passes with the nightly snapshot.
          - name: 'nightly'
            stack_yaml: 'stack.yaml'
          # Check that the build passes with the latest LTS snapshot.
          - name: 'lts16'
            stack_yaml: 'stack-lts16.yaml'

    steps:
    - uses: actions/checkout@v2
      # TODO: Revert this before merging.
      # if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/cache@v2
      name: Cache Stack Artifacts
      with:
        path: |
          ~/.stack
          .stack-work
        key: ${{ runner.os }}-stack-${{ hashFiles(matrix.stack_yaml) }}

    - uses: haskell/actions/setup@v1
      name: Stack Setup
      with:
        enable-stack: true
        stack-no-global: true
        stack-setup-ghc: true

    - name: Build
      run: |
        stack --stack-yaml=${{ matrix.stack_yaml }} build --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack --stack-yaml=${{ matrix.stack_yaml }} test
